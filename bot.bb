from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
import random
import time

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞ —Å–ø–µ—Ä–º—ã –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
user_total = {}
# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞
user_last_time = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("–ü—Ä–∏–≤–µ—Ç, –Ω–∞–ø–∏—à–∏ /ebembetmena, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–∫–æ–ª—å–∫–æ —Ç—ã –∑–∞–ª–∏–ª –≤ –±–µ—Ç–º–µ–Ω–∞ üçÜ")

async def ebembetmena(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    current_time = time.time()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–π–º–µ—Ä ‚Äî —Ä–∞–∑ –≤ 3600 —Å–µ–∫—É–Ω–¥ (1 —á–∞—Å)
    if user_id in user_last_time and current_time - user_last_time[user_id] < 3600:
        remaining = int(3600 - (current_time - user_last_time[user_id]))
        minutes = remaining // 60
        seconds = remaining % 60
        await update.message.reply_text(f"–ü–æ–¥–æ–∂–¥–∏ –µ—â—ë {minutes} –º–∏–Ω. {seconds} —Å–µ–∫. –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –∑–∞–ª–∏–≤–æ–º.")
        return

    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è "—Ä–∞–∑–º–µ—Ä–∞"
    size = round(random.uniform(3.0, 25.0), 1)
    emojis = "üçÜ" * int(size // 3)

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ–±—â–µ–≥–æ –æ–±—ä–µ–º–∞
    if user_id not in user_total:
        user_total[user_id] = 0
    user_total[user_id] += size
    total = round(user_total[user_id], 1)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤—ã–∑–æ–≤–∞
    user_last_time[user_id] = current_time

    await update.message.reply_text(
        f"–¢—ã –∑–∞–ª–∏–ª –≤ –±–µ—Ç–º–µ–Ω–∞ {size} –ª. —Å–ø–µ—Ä–º—ã {emojis}\n–í—Å–µ–≥–æ —Ç—ã –∑–∞–ª–∏–ª {total} –ª. üß™"
    )

app = ApplicationBuilder().token("7356003536:AAF5LWvzC4DM9dngb1Ckfl6bhvihCvNWIC0").build()

app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("ebembetmena", ebembetmena))

app.run_polling()